#@TYPE: Machine
#@NAME: redpitaya
#@DESCRIPTION: Machine support for Red Pitaya.
#
# This configuration file was based off the zc702 evaluation board configuration file.
#
SOC_VARIANT ?= "7z"

require conf/machine/include/soc-zynq.inc
require conf/machine/include/machine-xilinx-default.inc

#require conf/machine/include/tune-zynq.inc
#require conf/machine/include/machine-xilinx-overrides.inc
#require conf/machine/include/machine-xilinx-default.inc
#require conf/machine/include/machine-xilinx-qemu.inc

MACHINE_FEATURES = "rtc ext2 ext3 vfat usbhost"

# Generate first stage boot loader using custom recipe
# PREFERRED_PROVIDER_virtual/boot-bin = "zynq-fsbl"

# u-boot configuration
UBOOT_MACHINE = "redpitaya_defconfig"
# Don't use u-boot FSBL
# SPL_BINARY = ""

EXTRA_IMAGEDEPENDS += " \
		virtual/boot-bin \
		virtual/bootloader \
		"

SERIAL_CONSOLE = "115200 ttyPS0"

KERNEL_DEVICETREE = "zynq-redpitaya.dtb"

IMAGE_BOOT_FILES += " \
		boot.bin \
		boot.scr \
		"

# Although not fully supported you can run this machine on the mainline QEMU 'xilinx-zynq-a9' machine
IMAGE_CLASSES += "qemuboot"
QB_MEM = "-m 1024"
QB_MACHINE = "-machine xilinx-zynq-a9"
QB_OPT_APPEND = "-nographic -serial null -serial mon:stdio"
QB_NETWORK_DEVICE = "-net nic,netdev=net0,macaddr=@MAC@"

# Xilinx's fork of QEMU has much better results, so let's default to that
# Use qemu-xilinx instead of mainline
PREFERRED_PROVIDER_qemu-helper-native = "qemu-xilinx-helper-native"

IMAGE_CLASSES += "qemuboot-xilinx"
